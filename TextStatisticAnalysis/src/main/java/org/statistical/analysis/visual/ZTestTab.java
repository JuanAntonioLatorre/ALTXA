package org.statistical.analysis.visual;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.apache.commons.lang3.StringUtils;
import org.statistical.analysis.business.StatisticalAnalysis;
import org.statistical.analysis.pojo.Settings;
import org.statistical.analysis.pojo.ZetaTest;
import org.statistical.analysis.utils.IOUtils;
import org.statistical.analysis.utils.PropertiesUtils;
import org.statistical.analysis.utils.VisualUtils;
import org.statistical.analysis.visual.components.ScatterPlotFrame;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;

public class ZTestTab {
    private JPanel ZTestTab;
    private JButton textAFileButton;
    private JButton textBFileButton;
    private JButton textCFileButton;
    private JButton ignoredWordsFileButton;
    private JTextField textAField;
    private JTextField textBField;
    private JTextField textCField;
    private JTextField ignoredWordsField;
    private JButton executeZtestAnalysisButton;
    private JCheckBox outputToFileCheckBox;
    private JTextArea outputTextArea;

    public ZTestTab() {
        textAFileButton.addActionListener(VisualUtils.fileChooserActionListener(textAField));
        textBFileButton.addActionListener(VisualUtils.fileChooserActionListener(textBField));
        textCFileButton.addActionListener(VisualUtils.fileChooserActionListener(textCField));
        ignoredWordsFileButton.addActionListener(VisualUtils.fileChooserActionListener(ignoredWordsField));
        executeZtestAnalysisButton.addActionListener(executeAnalysis());
    }

    private ActionListener executeAnalysis() {
        return e -> {
            if (StringUtils.isNotBlank(textAField.getText()) && StringUtils.isNotBlank(textBField.getText()) &&
                    StringUtils.isNotBlank(textCField.getText()) && StringUtils.isNotBlank(ignoredWordsField.getText()))
                try {
                    outputTextArea.setText(null);
                    executeZTestAnalysis(textAField.getText(), textBField.getText(), textCField.getText(), ignoredWordsField.getText(), outputTextArea);
                } catch (Throwable t) {
                    outputTextArea.append("\nERROR: an error occurred, could not complete analysis");
                    JOptionPane.showMessageDialog(new JFrame(), "AN ERROR OCCURRED: \n" + t.getMessage(),
                            "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            else
                JOptionPane.showMessageDialog(new JFrame(), "Select files before executing",
                        "WARNING", JOptionPane.WARNING_MESSAGE);
        };
    }

    private void executeZTestAnalysis(String textAPath, String textBPath, String textCPath, String ignoredWordsPath, JTextArea outputTextArea) throws Exception {
        Settings settings = new Settings(PropertiesUtils.getSettingsFile());

        ZetaTest zetaTest = StatisticalAnalysis.getZetaTest(textAPath, textBPath, textCPath, ignoredWordsPath, outputTextArea, settings);

        if (outputToFileCheckBox.isSelected()) {
            IOUtils.writeOutMarkers(zetaTest.getTextAName(), zetaTest.getTextAMarkers());
            IOUtils.writeOutMarkers(zetaTest.getTextBName(), zetaTest.getTextBMarkers());
            IOUtils.writeOutZetaTestCsv(zetaTest.getTextAName(), zetaTest.getTextBName(), zetaTest.getTextAGraphItems(),
                    zetaTest.getTextBGraphItems(), zetaTest.getTextCGraphItems());
        }

        outputTextArea.append(IOUtils.outputZTestAnalysis(zetaTest));

        drawGraph(zetaTest);
    }

    private void drawGraph(ZetaTest zetaTest) {
        SwingUtilities.invokeLater(() -> {
            ScatterPlotFrame graph = new ScatterPlotFrame("ZetaTest graph", zetaTest);
            graph.setSize(800, 800);
            graph.setLocationRelativeTo(null);
            graph.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            graph.setVisible(true);
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        ZTestTab = new JPanel();
        ZTestTab.setLayout(new GridLayoutManager(6, 3, new Insets(5, 5, 5, 5), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Text A file");
        ZTestTab.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Text B file");
        ZTestTab.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Text C file (unknown author)");
        ZTestTab.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Ignored words file");
        ZTestTab.add(label4, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textAFileButton = new JButton();
        textAFileButton.setBackground(new Color(-10307442));
        textAFileButton.setEnabled(true);
        textAFileButton.setText("Choose file");
        ZTestTab.add(textAFileButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textBFileButton = new JButton();
        textBFileButton.setBackground(new Color(-10307442));
        textBFileButton.setText("Choose file");
        ZTestTab.add(textBFileButton, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textCFileButton = new JButton();
        textCFileButton.setBackground(new Color(-10307442));
        textCFileButton.setText("Choose file");
        ZTestTab.add(textCFileButton, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ignoredWordsFileButton = new JButton();
        ignoredWordsFileButton.setBackground(new Color(-10307442));
        ignoredWordsFileButton.setText("Choose file");
        ZTestTab.add(ignoredWordsFileButton, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textAField = new JTextField();
        textAField.setBackground(new Color(-787713));
        textAField.setEditable(false);
        ZTestTab.add(textAField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        textBField = new JTextField();
        textBField.setBackground(new Color(-787713));
        textBField.setEditable(false);
        ZTestTab.add(textBField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        textCField = new JTextField();
        textCField.setBackground(new Color(-787713));
        textCField.setEditable(false);
        ZTestTab.add(textCField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        ignoredWordsField = new JTextField();
        ignoredWordsField.setBackground(new Color(-787713));
        ignoredWordsField.setEditable(false);
        ZTestTab.add(ignoredWordsField, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        executeZtestAnalysisButton = new JButton();
        executeZtestAnalysisButton.setBackground(new Color(-11760710));
        executeZtestAnalysisButton.setText("Execute Ztest analysis");
        ZTestTab.add(executeZtestAnalysisButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        outputToFileCheckBox = new JCheckBox();
        outputToFileCheckBox.setText("Output to file");
        ZTestTab.add(outputToFileCheckBox, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        ZTestTab.add(scrollPane1, new GridConstraints(5, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        outputTextArea = new JTextArea();
        outputTextArea.setEditable(false);
        scrollPane1.setViewportView(outputTextArea);
        label1.setLabelFor(textAField);
        label2.setLabelFor(textBField);
        label3.setLabelFor(textCField);
        label4.setLabelFor(ignoredWordsField);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return ZTestTab;
    }

}
